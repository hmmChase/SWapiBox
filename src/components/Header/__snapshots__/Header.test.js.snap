// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <NavLink
          activeClassName="active"
          ariaCurrent="true"
          to="/people"
>
          People
</NavLink>,
        <NavLink
          activeClassName="active"
          ariaCurrent="true"
          to="/planets"
>
          Planets
</NavLink>,
        <NavLink
          activeClassName="active"
          ariaCurrent="true"
          to="/vehicles"
>
          Vehicles
</NavLink>,
      ],
      "className": "Header",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "activeClassName": "active",
          "ariaCurrent": "true",
          "children": "People",
          "to": "/people",
        },
        "ref": null,
        "rendered": "People",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "activeClassName": "active",
          "ariaCurrent": "true",
          "children": "Planets",
          "to": "/planets",
        },
        "ref": null,
        "rendered": "Planets",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "activeClassName": "active",
          "ariaCurrent": "true",
          "children": "Vehicles",
          "to": "/vehicles",
        },
        "ref": null,
        "rendered": "Vehicles",
        "type": [Function],
      },
    ],
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            to="/people"
>
            People
</NavLink>,
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            to="/planets"
>
            Planets
</NavLink>,
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            to="/vehicles"
>
            Vehicles
</NavLink>,
        ],
        "className": "Header",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "ariaCurrent": "true",
            "children": "People",
            "to": "/people",
          },
          "ref": null,
          "rendered": "People",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "ariaCurrent": "true",
            "children": "Planets",
            "to": "/planets",
          },
          "ref": null,
          "rendered": "Planets",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "ariaCurrent": "true",
            "children": "Vehicles",
            "to": "/vehicles",
          },
          "ref": null,
          "rendered": "Vehicles",
          "type": [Function],
        },
      ],
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
